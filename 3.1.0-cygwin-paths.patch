diff --git a/Source/kwsys/SystemTools.cxx b/Source/kwsys/SystemTools.cxx
index e4c82d8..6064fd1 100644
--- a/Source/kwsys/SystemTools.cxx
+++ b/Source/kwsys/SystemTools.cxx
@@ -85,19 +85,12 @@
 # if defined(_MSC_VER) && _MSC_VER >= 1800
 #  define KWSYS_WINDOWS_DEPRECATED_GetVersionEx
 # endif
-#elif defined (__CYGWIN__)
-# include <windows.h>
-# undef _WIN32
 #endif
 
 #if !KWSYS_CXX_HAS_ENVIRON_IN_STDLIB_H
 extern char **environ;
 #endif
 
-#ifdef __CYGWIN__
-# include <sys/cygwin.h>
-#endif
-
 // getpwnam doesn't exist on Windows and Cray Xt3/Catamount
 // same for TIOCGWINSZ
 #if defined(_WIN32) || defined (__LIBCATAMOUNT__)
@@ -1141,7 +1134,7 @@ bool SystemTools::FileExists(const kwsys_stl::string& filename)
     {
     return false;
     }
-#if defined(__CYGWIN__)
+#if 0
   // Convert filename to native windows path if possible.
   char winpath[MAX_PATH];
   if(SystemTools::PathCygwinToWin32(filename.c_str(), winpath))
@@ -1183,7 +1176,7 @@ bool SystemTools::FileExists(const kwsys_stl::string& filename, bool isFile)
 }
 
 //----------------------------------------------------------------------------
-#ifdef __CYGWIN__
+#if 0
 bool SystemTools::PathCygwinToWin32(const char *path, char *win32_path)
 {
   SystemToolsTranslationMap::iterator i =
@@ -4289,7 +4282,7 @@ bool SystemTools::FileIsFullPath(const char* in_name)
 
 bool SystemTools::FileIsFullPath(const char* in_name, size_t len)
 {
-#if defined(_WIN32) || defined(__CYGWIN__)
+#if defined(_WIN32)
   // On Windows, the name must be at least two characters long.
   if(len < 2)
     {
@@ -5056,9 +5049,6 @@ bool SystemTools::ParseURL( const kwsys_stl::string& URL,
 static unsigned int SystemToolsManagerCount;
 SystemToolsTranslationMap *SystemTools::TranslationMap;
 SystemToolsTranslationMap *SystemTools::LongPathMap;
-#ifdef __CYGWIN__
-SystemToolsTranslationMap *SystemTools::Cyg2Win32Map;
-#endif
 
 // SystemToolsManager manages the SystemTools singleton.
 // SystemToolsManager should be included in any translation unit
@@ -5104,9 +5094,6 @@ void SystemTools::ClassInitialize()
   // Allocate the translation map first.
   SystemTools::TranslationMap = new SystemToolsTranslationMap;
   SystemTools::LongPathMap = new SystemToolsTranslationMap;
-#ifdef __CYGWIN__
-  SystemTools::Cyg2Win32Map = new SystemToolsTranslationMap;
-#endif
 
   // Add some special translation paths for unix.  These are not added
   // for windows because drive letters need to be maintained.  Also,
@@ -5161,9 +5148,6 @@ void SystemTools::ClassFinalize()
 {
   delete SystemTools::TranslationMap;
   delete SystemTools::LongPathMap;
-#ifdef __CYGWIN__
-  delete SystemTools::Cyg2Win32Map;
-#endif
 }
 
 
diff --git a/Source/kwsys/SystemTools.hxx.in b/Source/kwsys/SystemTools.hxx.in
index beb2a7e..eacc22d 100644
--- a/Source/kwsys/SystemTools.hxx.in
+++ b/Source/kwsys/SystemTools.hxx.in
@@ -298,15 +298,6 @@ public:
   static bool FileExists(const kwsys_stl::string& filename);
 
   /**
-   * Converts Cygwin path to Win32 path. Uses dictionary container for
-   * caching and calls to cygwin_conv_to_win32_path from Cygwin dll
-   * for actual translation.  Returns true on success, else false.
-   */
-#ifdef __CYGWIN__
-  static bool PathCygwinToWin32(const char *path, char *win32_path);
-#endif
-
-  /**
    * Return file length
    */
   static unsigned long FileLength(const kwsys_stl::string& filename);
@@ -942,9 +933,6 @@ private:
    */
   static SystemToolsTranslationMap *TranslationMap;
   static SystemToolsTranslationMap *LongPathMap;
-#ifdef __CYGWIN__
-  static SystemToolsTranslationMap *Cyg2Win32Map;
-#endif
   friend class SystemToolsManager;
 };
 
